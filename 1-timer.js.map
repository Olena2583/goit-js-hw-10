{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["`use strict`;\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n// const startBtn = document.querySelector('#start-btn');\n\n// let selectedDate = null;\n// startBtn.disabled = true;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     selectedDate = selectedDates[0];\n//     const now = new Date();\n//     if (selectedDate <= now) {\n//       startBtn.disabled = true;\n//       iziToast.show({\n//         title: 'Error',\n//         message: 'Please choose a date in the future',\n//         color: 'red',\n//         position: 'topCenter',\n//       });\n//     } else {\n//       startBtn.disabled = false;\n//     }\n//   },\n// };\n\n// flatpickr('#datetime-picker', options);\n\n// class Timer {\n//   constructor({ onTick }) {\n//     this.isActive = false;\n//     this.onTick = onTick;\n//     this.intervalId = null;\n//     this.init();\n//   }\n//   init() {\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//   }\n//   stop() {\n//     clearInterval(this.intervalId);\n//     this.isActive = false;\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//   }\n//   start() {\n//     if (this.isActive) return;\n\n//     this.isActive = true;\n//     startBtn.disabled = true;\n//     const endTime = selectedDate.getTime();\n//     this.intervalId = setInterval(() => {\n//       const currentTime = Date.now();\n//       const deltaTime = endTime - currentTime;\n//       if (deltaTime <= 0) {\n//         this.stop();\n//         iziToast.show({\n//           title: 'Completed',\n//           message: 'Timer has ended',\n//           color: 'green',\n//           position: 'topCenter',\n//         });\n//         return;\n//       }\n//       const time = this.convertMs(deltaTime);\n\n//       this.onTick(time);\n//     }, 1000);\n//   }\n\n//   getTimeComponents(time) {\n//     const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n//     const hours = this.pad(\n//       Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//     );\n//     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//     return { hours, mins, secs };\n//   }\n\n//   pad(value) {\n//     return String(value).padStart(2, '0');\n//   }\n\n//   convertMs(ms) {\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n\n//     const days = Math.floor(ms / day);\n//     const hours = Math.floor((ms % day) / hour);\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//     return { days, hours, minutes, seconds };\n//   }\n// }\n\n// const timer = new Timer({\n//   onTick: updateClockface,\n// });\n\n// function updateClockface({ days, hours, minutes, seconds }) {\n//   document.querySelector('[data-days]').textContent = days;\n//   document.querySelector('[data-hours]').textContent = hours;\n//   document.querySelector('[data-minutes]').textContent = minutes;\n//   document.querySelector('[data-seconds]').textContent = seconds;\n// }\n\n// startBtn.addEventListener('click', () => {\n//   timer.start();\n// });\n\n// async function loadHTML(selector, url) {\n//   const response = await fetch(url);\n//   if (response.ok) {\n//     const text = await response.text();\n//     document.querySelector(selector).innerHTML = text;\n//   }\n// }\nconst startBtn = document.querySelector('#start-btn');\n\nlet selectedDate = null;\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    const now = new Date();\n    if (selectedDate <= now) {\n      startBtn.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topCenter',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nclass Timer {\n  constructor({ onTick }) {\n    this.isActive = false;\n    this.onTick = onTick;\n    this.intervalId = null;\n    this.init;\n  }\n  init() {\n    const time = { days: '00', hours: '00', minutes: '00', seconds: '00' };\n    this.onTick(time);\n  }\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n    const time = { days: '00', hours: '00', minutes: '00', seconds: '00' };\n    this.onTick(time);\n  }\n  start() {\n    if (this.isActive) return;\n\n    this.isActive = true;\n    startBtn.disabled = true;\n    const endTime = selectedDate.getTime();\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = endTime - currentTime;\n\n      if (deltaTime <= 0) {\n        this.stop();\n        iziToast.show({\n          title: 'Completed',\n          message: 'Timer has ended',\n          color: 'green',\n          position: 'topCenter',\n        });\n        return;\n      }\n      const time = this.convertMs(deltaTime);\n\n      this.onTick(time);\n    }, 1000);\n  }\n\n  convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days =\n      Math.floor(ms / day) <= 9\n        ? '0' + Math.floor(ms / day)\n        : Math.floor(ms / day);\n    const hours =\n      Math.floor((ms % day) / hour) <= 9\n        ? '0' + Math.floor((ms % day) / hour)\n        : Math.floor((ms % day) / hour);\n    const minutes =\n      Math.floor(((ms % day) % hour) / minute) <= 9\n        ? '0' + Math.floor(((ms % day) % hour) / minute)\n        : Math.floor(((ms % day) % hour) / minute);\n    const seconds =\n      Math.floor((((ms % day) % hour) % minute) / second) <= 9\n        ? '0' + Math.floor((((ms % day) % hour) % minute) / second)\n        : Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer = new Timer({\n  onTick: ({ days, hours, minutes, seconds }) => {\n    document.querySelector('[data-days]').textContent = days;\n    document.querySelector('[data-hours]').textContent = hours;\n    document.querySelector('[data-minutes]').textContent = minutes;\n    document.querySelector('[data-seconds]').textContent = seconds;\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  timer.start();\n});\n\nasync function loadHTML(selector, url) {\n  const response = await fetch(url);\n  if (response.ok) {\n    const text = await response.text();\n    document.querySelector(selector).innerHTML = text;\n  }\n}\n"],"names":["startBtn","selectedDate","options","selectedDates","iziToast","flatpickr","Timer","onTick","time","endTime","currentTime","deltaTime","ms","days","hours","minutes","seconds","timer"],"mappings":"2FAiIA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAEpD,IAAIC,EAAe,KACnBD,EAAS,SAAW,GAEpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAE1BF,GADQ,IAAI,MAEdD,EAAS,SAAW,GACpBI,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,MAAO,MACP,SAAU,WAClB,CAAO,GAEDJ,EAAS,SAAW,EAEvB,CACH,EAEAK,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,CAAM,CACV,YAAY,CAAE,OAAAC,GAAU,CACtB,KAAK,SAAW,GAChB,KAAK,OAASA,EACd,KAAK,WAAa,KAClB,KAAK,IACN,CACD,MAAO,CACL,MAAMC,EAAO,CAAE,KAAM,KAAM,MAAO,KAAM,QAAS,KAAM,QAAS,MAChE,KAAK,OAAOA,CAAI,CACjB,CACD,MAAO,CACL,cAAc,KAAK,UAAU,EAC7B,KAAK,SAAW,GAChB,MAAMA,EAAO,CAAE,KAAM,KAAM,MAAO,KAAM,QAAS,KAAM,QAAS,MAChE,KAAK,OAAOA,CAAI,CACjB,CACD,OAAQ,CACN,GAAI,KAAK,SAAU,OAEnB,KAAK,SAAW,GAChBR,EAAS,SAAW,GACpB,MAAMS,EAAUR,EAAa,UAC7B,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMS,EAAc,KAAK,MACnBC,EAAYF,EAAUC,EAE5B,GAAIC,GAAa,EAAG,CAClB,KAAK,KAAI,EACTP,EAAS,KAAK,CACZ,MAAO,YACP,QAAS,kBACT,MAAO,QACP,SAAU,WACpB,CAAS,EACD,MACD,CACD,MAAMI,EAAO,KAAK,UAAUG,CAAS,EAErC,KAAK,OAAOH,CAAI,CACjB,EAAE,GAAI,CACR,CAED,UAAUI,EAAI,CAMZ,MAAMC,EACJ,KAAK,MAAMD,EAAK,KAAG,GAAK,EACpB,IAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,KAAK,MAAMA,EAAK,KAAG,EACnBE,EACJ,KAAK,MAAOF,EAAK,MAAO,IAAI,GAAK,EAC7B,IAAM,KAAK,MAAOA,EAAK,MAAO,IAAI,EAClC,KAAK,MAAOA,EAAK,MAAO,IAAI,EAC5BG,EACJ,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,GAAK,EACxC,IAAM,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAC7C,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EACvCI,EACJ,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,GAAK,EACnD,IAAM,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,EACxD,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,EAExD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,CAEA,MAAMC,EAAQ,IAAIX,EAAM,CACtB,OAAQ,CAAC,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAC7C,SAAS,cAAc,aAAa,EAAE,YAAcH,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcC,EACrD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACvD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,CACxD,CACH,CAAC,EAEDhB,EAAS,iBAAiB,QAAS,IAAM,CACvCiB,EAAM,MAAK,CACb,CAAC"}